// 풀페이지 기준

$size-pc: 1200rem;
$size-gap: 30rem;
$shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);



@mixin inner() {
  max-width: $size-pc;
  margin: 0 auto;
  padding: 0 $size-gap / 2;
}

@mixin responsive($breakpoint ) {

  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  @if $breakpoint ==sp {
    @media only screen and (max-width: 575.98px) {
      @content;
    }
  }

  @if $breakpoint ==sl {
    @media only screen and (max-width: 767.98px) {
      @content;
    }
  }

  @if $breakpoint ==t {
    @media only screen and (max-width: 1199.97px) {
      @content;
    }
  }

  @if $breakpoint ==lp {
    @media only screen and (max-width: 1399.98px) {
      @content;
    }
  }

  @if $breakpoint ==pc {
    @media only screen and (min-width: 1399.99px) {
      @content;
    }
  }
}

@mixin flex_center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex_sb() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@keyframes TxtDownAni {
  0% {
    opacity: 0;
    transform: translate(0, -50rem);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes TxtDownAni02 {
  0% {
    opacity: 0;
    transform: translate(0, -25rem);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes TxtUpAni {
  0% {
    opacity: 0;
    transform: translate(0, 50rem);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes TxtrightAni {
  0% {
    opacity: 0;
    transform: translate(-100rem, 0);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes TxtleftAni {
  0% {
    opacity: 0;
    transform: translate(100rem, 0);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes arrow {
  0% {
    transform: translate(0, 0);
    opacity: 0;
  }

  50% {
    transform: translate(0, 9rem);
    opacity: 1;
  }

  100% {
    transform: translate(0, 18rem);
    opacity: 0;
  }
}

@keyframes circle {
  0% {
    transform: translate(-50%, -50%);
    outline: 0 solid rgba(255, 255, 255, 1);

  }

  80% {
    outline: 0 solid rgba(255, 255, 255, 1);
  }

  100% {
    transform: translate(-50%, 90rem);
    outline: 20rem solid rgba(255, 255, 255, 0);
  }
}

@keyframes scroll {
  0% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(150%);
  }
}


@keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeout {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}